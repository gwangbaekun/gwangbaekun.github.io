---
layout: post
title: "[CS] 브라우저 주소창에 www.google.com을 치면 벌어지는 일"
date: 2022-04-20 08:00:00 +0530
categories: CS
---

검색창에 www.google.com을 쳤을 때 브라우저가 어떻게 소통하여 우리에게 보여주는 지에 대한 최대한 간략하게 정리한 글 입니다.

> 논리구조로 최대한 쉽게 설명하였습니다. 이 형식의 글은 이해를 돕기 위함으로 읽지 않아도 됩니다.

1. 입력

<hr>

2. `캐싱된 DNS 기록`들을 통해 해당 도메인 주소와 대응하는 IP 주소를 확인한다.

> 더 빠르게 하기 위한 방법입니다. 우리가 도메인에 www.goo 정도만 쳐도 `www.google.com`이 자동완성이 되어 있는 것을 알 수 있습니다. 그 이유가 캐싱되어있기 때문이다. 정도로 이해하면 되겠습니다.

<hr>

3. 웹 브라우저가 `HTTP를 사용`하여 DNS에게 입력된 도메인 주소를 요청

> DNS란?
> URL들의 이름과 IP주소를 저장하고 있는 데이터베이스

> Http란?
> Hyper Text Transfer Protocol의 두문자어로, 인터넷에서 데이터를 주고받을 수 있는 프로토콜. 규칙에 맞춰서 서로 정보를 교환할 수 있게 함.

<hr>

4. DNS가 웹브라우저에게 찾는 사이트의 `IP 주소`를 응답

이름으로 입력을 하면 IP주소를 찾는 과정

<hr>

5. IP 주소를 이용해 웹브라우저가 웹서버에게 html문서를 요청합니다.

`TCP 연결`이 전제가 되어야 합니다.

> TCP란?
> IP주소 체계를 따르며 TCP의 특성을 활용해 송신자와 수신자의 논리적 연결을 생성하고 신뢰성을 유지할 수 있도록 하겠다는 의미

<hr>

6. 웹어플리케이션서버(WAS)와 데이터베이스에서 우선 웹페이지 작업을 처리

> WAS란?
> 웹 서버를 도와 로직을 할당받아 수행해주고 데이터를 관리해주는 미들웨어입니다.
> 주로 파일 생상이나 동적인 페이지처리를 담당합니다.

<hr>

7. 웹서버는 웹 브라우저에게 html 문서 결과를 응답합니다.

> request, response

- 1xx ▶️ 정보만 담긴 메세지
- 2xx ▶️ response 성공
- 3xx ▶️ 클라이언트를 다른 URL로 리다이렉트
- 4xx ▶️ 클라이언트 측에서 에러 발생
- 5xx ▶️ 서버 측에서 에러 발생
